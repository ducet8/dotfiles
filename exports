export DOT_LOCATION

##
# Determine OS Variant
##
Os_Id=""
Os_Version_Id=""
Os_Version_Major=""
Os_Wsl=0

if uname -r | grep -q Microsoft; then Os_Wsl=1; fi

if [ -r /etc/os-release ]; then
    if [ ${#Os_Id} -eq 0 ]; then
        Os_Id=$(sed -nEe 's#"##g;s#^ID=(.*)$#\1#p' /etc/os-release)
    fi
    if [ ${#Os_Name} -eq 0 ]; then
        Os_Name=$(sed -nEe 's#"##g;s#^NAME=(.*)$#\1#p' /etc/os-release)
    fi
    if [ ${#Os_Pretty_Name} -eq 0 ]; then
        Os_Pretty_Name=$(sed -nEe 's#"##g;s#^PRETTY_NAME=(.*)$#\1#p' /etc/os-release)
        if [ ${Os_Wsl} -eq 1 ]; then
            Os_Pretty_Name+=" (WSL)"
        fi
    fi
    if [ ${#Os_Version_Id} -eq 0 ]; then
        Os_Version_Id=$(sed -nEe 's#"##g;s#^VERSION_ID=(.*)$#\1#p' /etc/os-release)
    fi
fi

if [ ${#Os_Id} -eq 0 ]; then
    if [ -r /etc/redhat-release ]; then
        Os_Id=rhel
        Os_Version_Id=$(sed 's/[^.0-9][^.0-9]*//g' /etc/redhat-release)
    fi
fi

if [ ${#Os_Id} -eq 0 ]; then
    if uname -s | grep -q Darwin; then
        Os_Id=macos
        Os_Version_Id=$(/usr/bin/sw_vers -productVersion 2> /dev/null)
    fi
fi

Os_Version_Major=${Os_Version_Id%.*}

export Os_Id Os_Version_Id Os_Version_Major Os_Wsl

if [ ${#Os_Id} -gt 0 ]; then
    if [ ${#Os_Version_Major} -gt 0 ]; then
        export Os_Variant="${Os_Id}/${Os_Version_Major}"
    else
        export Os_Variant="${Os_Id}"
    fi
fi

export Uname_I=$(uname -i 2> /dev/null)

##
# bash Export
##
if [[ ${Os_Id} == "macos" ]]; then
    export SHELL=/usr/local/bin/bash    # Brew's bash
else
    export SHELL=bash
fi

# Colors for ls
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

##
# EDITOR Export
##
unset -v EDITOR
Editors=(nvim vim vi)
for Editor in ${Editors[@]}; do
    if type -P ${Editor} &> /dev/null; then
        export EDITOR="$(type -P ${Editor} 2> /dev/null)"
        if [[ "${EDITOR}" == *"vim"* ]] && [ -r "${DOT_LOCATION}/.vimrc" ]; then
            alias vim="HOME=\"${DOT_LOCATION}\" ${EDITOR} --cmd \"let User_Name='$(whoami)'\" --cmd \"let User_Dir='${DOT_LOCATION}'\""
        else
            alias vim="${EDITOR}"
        fi
        if type -P vim &> /dev/null; then
            alias vi=vim
        fi
        break
    fi
done
unset -v Editor Editors

##
# Git Exports
##
if type -P git &> /dev/null; then
    export GIT_EDITOR=${EDITOR}
fi

##
# Go Exports
##
if [[ ${Os_Id} == "macos" ]]; then
    export SHELL=/usr/local/bin/bash
    export GOPATH=${HOME}/projects/go
    export GOROOT=/usr/local/opt/go/libexec
    export PATH=$PATH:$GOROOT/bin
else
    export GOPATH=${HOME}/go
fi
export GOBIN=$GOPATH/bin
export PATH=$PATH:$GOPATH/bin

# if it's an ssh session export GPG_TTY
if [[ -n "$SSH_CLIENT" ]] || [[ -n "$SSH_TTY" ]]; then
	GPG_TTY=$(tty)
	export GPG_TTY
fi

# hidpi for gtk apps
export GDK_SCALE=2
export GDK_DPI_SCALE=0.5
export QT_DEVICE_PIXEL_RATIO=2

##
# History Exports
##
export HISTSIZE=50000000;
export HISTFILESIZE=$HISTSIZE;
export HISTIGNORE=" *:ls:cd:cd -:cd ~:pwd:exit:date:* --help:* -h:clear:man *:df -*:history *";
export HISTCONTROL=ignoreboth:erasedups
export HISTTIMEFORMAT="[%Y-%m-%d %H:%M:%S] "

export TZ="America/Chicago"

##
# Language Exports - Prefer US English and use UTF-8
##
export LANG="en_US.UTF-8";
if [[ ${Os_Id} == "macos" ]]; then
    export LC_ALL="en_US.UTF-8";
fi

##
# Man Exports
##
if type -P bat &>/dev/null; then
    export MANPAGER="sh -c 'col -bx | bat -l man -p'"
else
    # Donâ€™t clear the screen after quitting a manual page
    export MANPAGER="less -X";
fi
Man_Paths=()
Man_Paths+=(/usr/local/share/man)
Man_Paths+=(/usr/share/man)
for Man_Path in ${Man_Paths[@]}; do
    if ! [[ "${MANPATH}" =~ (^|:)${Man_Path}($|:) ]]; then
        if [ -r "${Man_Path}" ]; then
            export MANPATH+=":${Man_Path}"
        fi
    fi
done

export TODOTXT_DEFAULT_ACTION=ls

##
# Python Exports
##
if [[ ${Os_Id} == "macos" ]]; then
    export PATH="/Library/Frameworks/Python.framework/Versions/3.10/bin:${PATH}"
fi

##
## Scripting Export
##
export PATH=/usr/local/bin:${HOME}/local/bin:$PATH

##
# Weather (WTTR) Exports
##
export WTTR_PARAMS=Fu
export WTTR_LOCATION=35209

# TODO: Make PATH unique only

##
# Local Exports
##
if  [[ -r ${HOME}/exports_local ]] && [[ -f ${HOME}/exports_local ]]; then
    source ${HOME}/exports_local
fi
